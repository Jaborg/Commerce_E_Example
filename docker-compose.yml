version: '2'

services:
  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "sales_events:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  airflow-webserver:
    build:
      context: .
      dockerfile: Docker/Dockerfile
    image: custom_airflow_server_image
    volumes:
      - ./initialize-airflow.sh:/entrypoint.sh
      - ./airflow/dags:/opt/airflow/dags
      - ./src/consumer/:/opt/airflow/consumer/
      - ./src/producer/:/opt/airflow/producer/
    entrypoint: ["/bin/bash", "/entrypoint.sh"]
    environment:
      - LOAD_EX=y
    ports:
      - "8080:8080"
    command: webserver

  airflow-scheduler:
    build:
      context: .
      dockerfile: Docker/Dockerfile
    image: custom_airflow_scheduler_image
    volumes:
      - ./initialize-airflow.sh:/entrypoint.sh
      - ./airflow/dags:/opt/airflow/dags
    entrypoint: ["/bin/bash", "/entrypoint.sh"]
    command: scheduler

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: Jaborg1258
      POSTGRES_PASSWORD: Sains1258
      POSTGRES_DB: ConsumeDB
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql_scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  pgdata: